{"filter":false,"title":"scoresheet_generator.py","tooltip":"/scoresheet_generator.py","undoManager":{"mark":100,"position":100,"stack":[[{"group":"doc","deltas":[{"start":{"row":30,"column":29},"end":{"row":30,"column":30},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":30},"end":{"row":30,"column":31},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":31},"end":{"row":30,"column":32},"action":"insert","lines":["S"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":32},"end":{"row":30,"column":33},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":33},"end":{"row":30,"column":34},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":34},"end":{"row":30,"column":35},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":35},"end":{"row":30,"column":36},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":36},"end":{"row":30,"column":37},"action":"insert","lines":["\""]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":37},"end":{"row":30,"column":38},"action":"insert","lines":[","]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":38},"end":{"row":30,"column":39},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":39},"end":{"row":30,"column":40},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":40},"end":{"row":30,"column":41},"action":"insert","lines":["h"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":41},"end":{"row":30,"column":42},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":30,"column":42},"end":{"row":30,"column":43},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":37},"end":{"row":49,"column":0},"action":"insert","lines":["",""]},{"start":{"row":49,"column":0},"end":{"row":49,"column":3},"action":"insert","lines":["\t\t\t"]}]}],[{"group":"doc","deltas":[{"start":{"row":49,"column":3},"end":{"row":49,"column":43},"action":"insert","lines":["print \"Inserting in FieldingStat \",other"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":18},"end":{"row":48,"column":22},"action":"remove","lines":["othe"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":18},"end":{"row":48,"column":19},"action":"remove","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":18},"end":{"row":48,"column":19},"action":"insert","lines":["b"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":19},"end":{"row":48,"column":20},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":20},"end":{"row":48,"column":21},"action":"insert","lines":["w"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":21},"end":{"row":48,"column":22},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":22},"end":{"row":48,"column":23},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":48,"column":23},"end":{"row":48,"column":24},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":49,"column":38},"end":{"row":49,"column":43},"action":"remove","lines":["other"]},{"start":{"row":49,"column":38},"end":{"row":49,"column":39},"action":"insert","lines":["b"]}]}],[{"group":"doc","deltas":[{"start":{"row":49,"column":39},"end":{"row":49,"column":40},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":49,"column":40},"end":{"row":49,"column":41},"action":"insert","lines":["w"]}]}],[{"group":"doc","deltas":[{"start":{"row":49,"column":41},"end":{"row":49,"column":42},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":49,"column":42},"end":{"row":49,"column":43},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":49,"column":43},"end":{"row":49,"column":44},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":61,"column":37},"end":{"row":62,"column":0},"action":"insert","lines":["",""]},{"start":{"row":62,"column":0},"end":{"row":62,"column":3},"action":"insert","lines":["\t\t\t"]}]}],[{"group":"doc","deltas":[{"start":{"row":62,"column":3},"end":{"row":62,"column":43},"action":"insert","lines":["print \"Inserting in FieldingStat \",other"]}]}],[{"group":"doc","deltas":[{"start":{"row":76,"column":38},"end":{"row":77,"column":0},"action":"insert","lines":["",""]},{"start":{"row":77,"column":0},"end":{"row":77,"column":3},"action":"insert","lines":["\t\t\t"]}]}],[{"group":"doc","deltas":[{"start":{"row":77,"column":3},"end":{"row":77,"column":43},"action":"insert","lines":["print \"Inserting in FieldingStat \",other"]}]}],[{"group":"doc","deltas":[{"start":{"row":87,"column":37},"end":{"row":88,"column":0},"action":"insert","lines":["",""]},{"start":{"row":88,"column":0},"end":{"row":88,"column":3},"action":"insert","lines":["\t\t\t"]}]}],[{"group":"doc","deltas":[{"start":{"row":88,"column":3},"end":{"row":88,"column":43},"action":"insert","lines":["print \"Inserting in FieldingStat \",other"]}]}],[{"group":"doc","deltas":[{"start":{"row":77,"column":38},"end":{"row":77,"column":43},"action":"remove","lines":["other"]},{"start":{"row":77,"column":38},"end":{"row":77,"column":39},"action":"insert","lines":["b"]}]}],[{"group":"doc","deltas":[{"start":{"row":77,"column":39},"end":{"row":77,"column":40},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":77,"column":40},"end":{"row":77,"column":41},"action":"insert","lines":["w"]}]}],[{"group":"doc","deltas":[{"start":{"row":77,"column":41},"end":{"row":77,"column":42},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":77,"column":42},"end":{"row":77,"column":43},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":77,"column":43},"end":{"row":77,"column":44},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":161,"column":29},"end":{"row":162,"column":0},"action":"insert","lines":["",""]},{"start":{"row":162,"column":0},"end":{"row":162,"column":3},"action":"insert","lines":["\t\t\t"]}]}],[{"group":"doc","deltas":[{"start":{"row":162,"column":2},"end":{"row":162,"column":3},"action":"remove","lines":["\t"]}]}],[{"group":"doc","deltas":[{"start":{"row":162,"column":1},"end":{"row":162,"column":2},"action":"remove","lines":["\t"]}]}],[{"group":"doc","deltas":[{"start":{"row":162,"column":0},"end":{"row":162,"column":1},"action":"remove","lines":["\t"]}]}],[{"group":"doc","deltas":[{"start":{"row":161,"column":29},"end":{"row":162,"column":0},"action":"remove","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":164,"column":32},"end":{"row":165,"column":0},"action":"insert","lines":["",""]},{"start":{"row":165,"column":0},"end":{"row":165,"column":2},"action":"insert","lines":["\t\t"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":2},"end":{"row":165,"column":42},"action":"insert","lines":["print \"Inserting in FieldingStat \",other"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":23},"end":{"row":165,"column":34},"action":"remove","lines":["ieldingStat"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":22},"end":{"row":165,"column":23},"action":"remove","lines":["F"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":22},"end":{"row":165,"column":23},"action":"insert","lines":["P"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":23},"end":{"row":165,"column":24},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":24},"end":{"row":165,"column":25},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":25},"end":{"row":165,"column":26},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":25},"end":{"row":165,"column":26},"action":"remove","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":25},"end":{"row":165,"column":26},"action":"insert","lines":["y"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":26},"end":{"row":165,"column":27},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":27},"end":{"row":165,"column":28},"action":"insert","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":28},"end":{"row":165,"column":29},"action":"insert","lines":["S"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":29},"end":{"row":165,"column":30},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":30},"end":{"row":165,"column":31},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":31},"end":{"row":165,"column":32},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":32},"end":{"row":165,"column":33},"action":"insert","lines":["D"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":33},"end":{"row":165,"column":34},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":34},"end":{"row":165,"column":35},"action":"insert","lines":["c"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":35},"end":{"row":165,"column":36},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":43},"end":{"row":165,"column":44},"action":"remove","lines":["r"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":42},"end":{"row":165,"column":43},"action":"remove","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":41},"end":{"row":165,"column":42},"action":"remove","lines":["h"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":40},"end":{"row":165,"column":41},"action":"remove","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":39},"end":{"row":165,"column":40},"action":"remove","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":39},"end":{"row":165,"column":40},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":40},"end":{"row":165,"column":41},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":41},"end":{"row":165,"column":42},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":42},"end":{"row":165,"column":43},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":37},"end":{"row":165,"column":38},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":38},"end":{"row":165,"column":39},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":39},"end":{"row":165,"column":40},"action":"insert","lines":[" "]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":40},"end":{"row":165,"column":41},"action":"insert","lines":["B"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":41},"end":{"row":165,"column":42},"action":"insert","lines":["a"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":42},"end":{"row":165,"column":43},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":43},"end":{"row":165,"column":44},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":44},"end":{"row":165,"column":45},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":45},"end":{"row":165,"column":46},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":165,"column":46},"end":{"row":165,"column":47},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":229,"column":33},"end":{"row":230,"column":0},"action":"insert","lines":["",""]},{"start":{"row":230,"column":0},"end":{"row":230,"column":3},"action":"insert","lines":["\t\t\t"]}]}],[{"group":"doc","deltas":[{"start":{"row":230,"column":3},"end":{"row":230,"column":54},"action":"insert","lines":["print \"Inserting in PlayerStatDict in Batting\",name"]}]}],[{"group":"doc","deltas":[{"start":{"row":230,"column":42},"end":{"row":230,"column":48},"action":"remove","lines":["atting"]},{"start":{"row":230,"column":42},"end":{"row":230,"column":43},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":230,"column":43},"end":{"row":230,"column":44},"action":"insert","lines":["w"]}]}],[{"group":"doc","deltas":[{"start":{"row":230,"column":44},"end":{"row":230,"column":45},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":230,"column":45},"end":{"row":230,"column":46},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":230,"column":46},"end":{"row":230,"column":47},"action":"insert","lines":["n"]}]}],[{"group":"doc","deltas":[{"start":{"row":230,"column":47},"end":{"row":230,"column":48},"action":"insert","lines":["g"]}]}],[{"group":"doc","deltas":[{"start":{"row":220,"column":2},"end":{"row":220,"column":3},"action":"insert","lines":["#"]}]}],[{"group":"doc","deltas":[{"start":{"row":248,"column":0},"end":{"row":248,"column":1},"action":"insert","lines":["#"]}]}],[{"group":"doc","deltas":[{"start":{"row":250,"column":0},"end":{"row":250,"column":1},"action":"insert","lines":["#"]}]}],[{"group":"doc","deltas":[{"start":{"row":251,"column":0},"end":{"row":251,"column":1},"action":"insert","lines":["#"]}]}],[{"group":"doc","deltas":[{"start":{"row":255,"column":1},"end":{"row":255,"column":2},"action":"insert","lines":["#"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":275,"column":18},"action":"remove","lines":["import requests","import time","from BeautifulSoup import BeautifulSoup","import re","import pickle","from fuzzywuzzy import fuzz","from fuzzywuzzy import process","from time import sleep","","\"\"\" HANDLES THE DISMISSAL DETAILS -- INCLUDING THE TYPE OF DISMISSAL AND THE PERPETRATORS\"\"\"","","fielding_stats={}","","def dismissal_handler(how_out):","\tother=\"\"","\tbowler=\"\"","\tfieldingstat={\"catches\":0, \"stumpings\":0, \"runouts\":0}","\tif(re.match('c.*b.*',how_out)):  #CATCH OUT","\t\tleft=\"c \"","\t\tright=\" b \"","\t\tother = re.search('%s(.*)%s' % (left, right), how_out).group(1)","\t\tleft=\"b \"","\t\tbowler = re.search('%s(.*)' % (left), how_out).group(1)","\t\tprint \"CAUGHT \", other, bowler","\t\tfieldingstat[\"catches\"]=1","\t\tother=other.strip()","\t\tif other in fielding_stats:","\t\t\tfielding_stats[other][\"catches\"]+=1","\t\telse:","\t\t\tfielding_stats[other]=fieldingstat","\t\t\tprint \"Inserting in FieldingStat \",other","\tif(re.match('lbw b.*',how_out)): #LEG BEFORE WICKET","\t\tleft=\"lbw b \"","\t\tbowler=re.search('%s(.*)' % (left), how_out).group(1)","\t\tprint \"LBW \",bowler","\tif(re.match('b.*',how_out)): #BOWLED","\t\tleft=\"b \"","\t\tbowler=re.search('%s(.*)' % (left), how_out).group(1)","\t\tprint \"BOWLED \",bowler","\tif(re.match('c & b .*',how_out)): #CAUGHT AND BOWLED","\t\tleft=\"c & b \"","\t\tbowler=re.search('%s(.*)' % (left), how_out).group(1)","\t\tprint \"CAUGHT+BOWLED \",bowler","\t\tbowler=bowler.strip()","\t\tfieldingstat[\"catches\"]=1","\t\tif bowler in fielding_stats:","\t\t\tfielding_stats[bowler][\"catches\"]+=1","\t\telse:","\t\t\tfielding_stats[bowler]=fieldingstat","\t\t\tprint \"Inserting in FieldingStat \",bowler","\tif(re.match('st.*b.*',how_out)): #STUMPED","\t\tleft=\"st \"","\t\tright=\" b \"","\t\tother = re.search('%s(.*)%s' % (left, right), how_out).group(1)","\t\tleft=\"b \"","\t\tfieldingstat[\"stumpings\"]=1","\t\tbowler = re.search('%s(.*)' % (left), how_out).group(1)","\t\tprint \"STUMPED \", other, bowler","\t\tif other in fielding_stats:","\t\t\tfielding_stats[other][\"stumpings\"]+=1","\t\telse:","\t\t\tfielding_stats[other]=fieldingstat","\t\t\tprint \"Inserting in FieldingStat \",other","\tif(re.match('run out.*',how_out)): #RUN OUT","\t\tleft=\"run out (\"","\t\tright=\")\"","\t\tthrower = re.search('%s(.*)%s' % (left, right), how_out).group(1)","\t\t#print thrower","\t\tthrower=thrower.strip()","\t\tthrower=thrower[1:len(thrower)-1]","\t\tt=thrower.split('/')","\t\tbowler=t[0].strip()","\t\tfieldingstat[\"runouts\"]=1","\t\tif bowler in fielding_stats:","\t\t\tfielding_stats[bowler][\"runouts\"]+=1","\t\telse:","\t\t\tfielding_stats[bowler]=fieldingstat","\t\t\tprint \"Inserting in FieldingStat \",bowler","\t\t#print t[0]","\t\tif(len(t)==2):","\t\t\tprint \"RO2!\"","\t\t\tother=t[1].strip()","\t\t\t#print other","\t\tfieldingstat[\"runouts\"]=1","\t\tif other in fielding_stats:","\t\t\tfielding_stats[other][\"runouts\"]+=1","\t\telse:","\t\t\tfielding_stats[other]=fieldingstat","\t\t\tprint \"Inserting in FieldingStat \",other","\t\t#print \"RUN OUT\",t[0],t[1]","\t","\tif(how_out.strip()==\"not out\"): #NOT OUT","\t\tprint \"NOT OUT\"","\t\t","\"\"\" CRAWLS AN URL \"\"\"","","def crawl(url):","\twhile True:","\t\ttry:","\t\t\tprint \"trying to get URL... \",","\t\t\tr=requests.get(url)","\t\t\tprint \"Got URL!\"","\t\t\treturn r.content","\t\texcept Exception as e:","\t\t\tprint e","\t\t\tsleep(2)","\t\t\tprint \"Retrying!!\"","","base_url = 'http://www.espncricinfo.com/carlton-mid-triangular-series-2015/engine/match/754751.html'","player_dict={\"Ian Bell\":0}","html = crawl(base_url)","print \"Page crawled.\"","parsed_html = BeautifulSoup(html)","","all_stats={} # STORES *ALL* THE STATS OF *ALL* THE PLAYERS INVOLVED IN THE MATCH","\t","bat_table=parsed_html.findAll(\"table\",{ \"class\" : \"batting-table innings\" })","","for table in bat_table:","\trows=table.findAll(\"tr\",{\"class\":None})","\t","\t# BATTING TABLE PARSER FOR BOTH INNINGS","\t","\tfor row in rows:","\t\tplayerstatdict={\"runsmade\":0, \"wickets\":0, \"ballsfaced\":0, \"fours\":0, \"sixes\":0, \"oversbowled\":0, \"maidenovers\":0, \"runsgiven\":0, \"dotsbowled\":0, \"mom\":0, \"dnb\":0, \"funscore\":0, \"catches\":0, \"stumpings\":0, \"runouts\":0}","\t\tname=\"\"","\t\tbatScore=0","\t\truns=0","\t\tfields=row.findAll(\"td\")","\t\tfor i in range(0,8):","\t\t\tif(i==1):","\t\t\t\tleft=\"view the player profile for \"","\t\t\t\tright=\"\\\" \"","\t\t\t\tname = re.search('%s(.*)%s' % (left, right), str(fields[i])).group(1)","\t\t\tif(i>=2 and i<=8):","\t\t\t\tleft=\">\"","\t\t\t\tright=\"</td>\"","\t\t\t\tresult = re.search('%s(.*)%s' % (left, right), str(fields[i])).group(1)","\t\t\t\t#print result,","\t\t\t\tif(i==2):","\t\t\t\t\tdismissal_handler(result)","\t\t\t\tif(i==3):","\t\t\t\t\truns=int(result.strip())","\t\t\t\t\tif(runs==0):","\t\t\t\t\t\tbatScore=batScore-5 #IMPACT DUCK","\t\t\t\t\tbatScore=batScore+runs #RUNS SCORE","\t\t\t\t\tplayerstatdict[\"runsmade\"]=runs","\t\t\t\t\tbatScore=batScore+(runs/25)*10 #MILESTONE BONUS","\t\t\t\tif(i==5):","\t\t\t\t\tbatScore=batScore+runs-int(result.strip()) #PACE BONUS","\t\t\t\t\tplayerstatdict[\"ballsfaced\"]=int(result.strip())","\t\t\t\tif(i==6):","\t\t\t\t\tplayerstatdict[\"fours\"]=int(result.strip())","\t\t\t\tif(i==7):","\t\t\t\t\tbatScore=batScore+int(result.strip())*2 #IMPACT SIXES","\t\t\t\t\tplayerstatdict[\"sixes\"]=int(result.strip())","\t\t#print\"  BATSCORE:\",batScore","\t\tprint \"\"","\t\tif name in player_dict:","\t\t\tplayer_dict[name]=player_dict[name]+batScore","\t\telse:","\t\t\tplayer_dict[name]=batScore","\t\t#print name, \"BAT,\", batScore","\t","\t\tall_stats[name]=playerstatdict","\t\tprint \"Inserting in PlayerStatDict in Batting\",name","bowl_table=parsed_html.findAll(\"table\",{ \"class\" : \"bowling-table\" })","for table in bowl_table:","\trows=table.findAll(\"tr\",{\"class\":None})","\t","\t# BOWLING TABLE PARSER FOR BOTH INNINGS","\t","\tfor row in rows:","\t\tplayerstatdict={\"runsmade\":0, \"wickets\":0, \"ballsfaced\":0, \"fours\":0, \"sixes\":0, \"oversbowled\":0.0, \"maidenovers\":0, \"runsgiven\":0, \"dotsbowled\":0, \"mom\":0, \"dnb\":0, \"funscore\":0, \"catches\":0, \"stumpings\":0, \"runouts\":0}","\t\tname=\"\"","\t\tbowlScore=0","\t\tballs=0","\t\tfields=row.findAll(\"td\")","\t\tfor i in range(0,10):","\t\t\tif(i==1):","\t\t\t\tleft=\"view the player profile for \"","\t\t\t\tright=\"\\\" \"","\t\t\t\t#print  name,","\t\t\t\tname = re.search('%s(.*)%s' % (left, right), str(fields[i])).group(1)","\t\t\tif(i>=2 and i<=10):","\t\t\t\tleft=\">\"","\t\t\t\tright=\"</td>\"","\t\t\t\tresult = re.search('%s(.*)%s' % (left, right), str(fields[i])).group(1)","\t\t\t\t#print result,","\t\t\t\tif(i==3):","\t\t\t\t\tmaidens=int(result.strip())","\t\t\t\t\tif(maidens>0):","\t\t\t\t\t\tbowlScore=bowlScore+maidens*20 #IMPACT SCORE MAIDENS","\t\t\t\t\tplayerstatdict[\"maidenovers\"]=maidens","\t\t\t\tif(i==5):","\t\t\t\t\twickets=int(result.strip())","\t\t\t\t\tbowlScore=bowlScore+wickets*20 #WICKETS SCORE","\t\t\t\t\tbowlScore=bowlScore+(wickets-1)*10 #MILESTONE BONUS","\t\t\t\t\tplayerstatdict[\"wickets\"]=wickets","\t\t\t\tif(i==2):","\t\t\t\t\tovers=float(result.strip()) #PACE BONUS","\t\t\t\t\tov=int(overs)","\t\t\t\t\tballs=ov*6+int((overs-ov)*10)","\t\t\t\t\tplayerstatdict[\"oversbowled\"]=overs","\t\t\t\tif(i==4):","\t\t\t\t\truns=int(result.strip())","\t\t\t\t\tbowlScore=bowlScore+int(1.5*balls-runs)","\t\t\t\t\t#print balls,runs","\t\t\t\t\tplayerstatdict[\"runsgiven\"]=runs","\t\t\t\tif(i==7):","\t\t\t\t\tdots=int(result.strip()) #IMPACT SCORE DOTS","\t\t\t\t\tbowlScore=bowlScore+dots","\t\t\t\t\tplayerstatdict[\"dotsbowled\"]=dots","\t\t\t\t","\t\t#print\"  BATSCORE:\",batScore","\t\tprint \"\"","\t\tif name in player_dict:","\t\t\tplayer_dict[name]=player_dict[name]+bowlScore","\t\telse:","\t\t\tplayer_dict[name]=bowlScore","\t\t#print name, \"BOWL,\", bowlScore","\t\t","\t\tif name in all_stats:","\t\t\tall_stats[name][\"oversbowled\"]=playerstatdict[\"oversbowled\"]","\t\t\tall_stats[name][\"maidenovers\"]=playerstatdict[\"maidenovers\"]","\t\t\tall_stats[name][\"runsgiven\"]=playerstatdict[\"runsgiven\"]","\t\t\tall_stats[name][\"wickets\"]=playerstatdict[\"wickets\"]","\t\t\tall_stats[name][\"dotsbowled\"]=playerstatdict[\"dotsbowled\"]","\t\telse:","\t\t\tall_stats[name]=playerstatdict","\t\t\tprint \"Inserting in PlayerStatDict in Bowling\",name","\t\t","\t\t","#print player_dict","print \"\\n \\n \\n\"","","tbl=parsed_html.find(\"div\",{ \"class\" : \"match-information\" })","stts=tbl.findAll(\"div\",{ \"class\" : \"bold space-top-bottom-10\"})","mom=str(stts[1].find(\"span\",{\"class\":\"normal\"}).text)","name=mom.split(\" \")","mom_name=name[0]+name[1]","","","# DNB AND MOM MODIFIER #","for player in all_stats:","\tif(all_stats[player][\"ballsfaced\"]==0):","\t\tall_stats[player][\"dnb\"]=1","","#print process.extractOne(mom_name,all_stats.keys())","","#print all_stats","#print fielding_stats","","print \"-------TESTING--------\"","for player in fielding_stats:","\t#print player,","\tmatch=process.extractOne(player,all_stats.keys())","\tif(match[1]>65): #CORRECT MATCH","\t\tall_stats[match[0]][\"catches\"]=fielding_stats[player][\"catches\"]","\t\tall_stats[match[0]][\"stumpings\"]=fielding_stats[player][\"stumpings\"]","\t\tall_stats[match[0]][\"runouts\"]=fielding_stats[player][\"runouts\"]","\tif(match[1]==0): # DUMMY ROW","\t\tcontinue","\tif(match[1]>20 and match[1]<65):","\t\tplayerstatdict={\"runsmade\":0, \"wickets\":0, \"ballsfaced\":0, \"fours\":0, \"sixes\":0, \"oversbowled\":0.0, \"maidenovers\":0, \"runsgiven\":0, \"dotsbowled\":0, \"mom\":0, \"dnb\":0, \"funscore\":0, \"catches\":0, \"stumpings\":0, \"runouts\":0}","\t\tall_stats[player]=playerstatdict","\t\tall_stats[player][\"catches\"]=fielding_stats[player][\"catches\"]","\t\tall_stats[player][\"stumpings\"]=fielding_stats[player][\"stumpings\"]","\t\tall_stats[player][\"runouts\"]=fielding_stats[player][\"runouts\"]","\t\t","print all_stats","#print \"Man Of The Match: \",name","#print name","#print rows[1].findAll(\"td\")","#print bat_table","#print parsed_html"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":268,"column":18},"action":"insert","lines":["import requests","import time","from BeautifulSoup import BeautifulSoup","import re","import pickle","from fuzzywuzzy import fuzz","from fuzzywuzzy import process","from time import sleep","","\"\"\" HANDLES THE DISMISSAL DETAILS -- INCLUDING THE TYPE OF DISMISSAL AND THE PERPETRATORS\"\"\"","","fielding_stats={}","","def dismissal_handler(how_out):","\tother=\"\"","\tbowler=\"\"","\tfieldingstat={\"catches\":0, \"stumpings\":0, \"runouts\":0}","\tif(re.match('c.*b.*',how_out)):  #CATCH OUT","\t\tleft=\"c \"","\t\tright=\" b \"","\t\tother = re.search('%s(.*)%s' % (left, right), how_out).group(1)","\t\tleft=\"b \"","\t\tbowler = re.search('%s(.*)' % (left), how_out).group(1)","\t\tprint \"CAUGHT \", other, bowler","\t\tfieldingstat[\"catches\"]=1","\t\tother=other.strip()","\t\tif other in fielding_stats:","\t\t\tfielding_stats[other][\"catches\"]+=1","\t\telse:","\t\t\tfielding_stats[other]=fieldingstat","\tif(re.match('lbw b.*',how_out)): #LEG BEFORE WICKET","\t\tleft=\"lbw b \"","\t\tbowler=re.search('%s(.*)' % (left), how_out).group(1)","\t\tprint \"LBW \",bowler","\tif(re.match('b.*',how_out)): #BOWLED","\t\tleft=\"b \"","\t\tbowler=re.search('%s(.*)' % (left), how_out).group(1)","\t\tprint \"BOWLED \",bowler","\tif(re.match('c & b .*',how_out)): #CAUGHT AND BOWLED","\t\tleft=\"c & b \"","\t\tbowler=re.search('%s(.*)' % (left), how_out).group(1)","\t\tprint \"CAUGHT+BOWLED \",bowler","\t\tbowler=bowler.strip()","\t\tfieldingstat[\"catches\"]=1","\t\tif bowler in fielding_stats:","\t\t\tfielding_stats[bowler][\"catches\"]+=1","\t\telse:","\t\t\tfielding_stats[other]=fieldingstat","\tif(re.match('st.*b.*',how_out)): #STUMPED","\t\tleft=\"st \"","\t\tright=\" b \"","\t\tother = re.search('%s(.*)%s' % (left, right), how_out).group(1)","\t\tleft=\"b \"","\t\tfieldingstat[\"stumpings\"]=1","\t\tbowler = re.search('%s(.*)' % (left), how_out).group(1)","\t\tprint \"STUMPED \", other, bowler","\t\tif other in fielding_stats:","\t\t\tfielding_stats[other][\"stumpings\"]+=1","\t\telse:","\t\t\tfielding_stats[other]=fieldingstat","\tif(re.match('run out.*',how_out)): #RUN OUT","\t\tleft=\"run out (\"","\t\tright=\")\"","\t\tthrower = re.search('%s(.*)%s' % (left, right), how_out).group(1)","\t\t#print thrower","\t\tthrower=thrower.strip()","\t\tthrower=thrower[1:len(thrower)-1]","\t\tt=thrower.split('/')","\t\tbowler=t[0].strip()","\t\tfieldingstat[\"runouts\"]=1","\t\tif bowler in fielding_stats:","\t\t\tfielding_stats[bowler][\"runouts\"]+=1","\t\telse:","\t\t\tfielding_stats[bowler]=fieldingstat","\t\t#print t[0]","\t\tif(len(t)==2):","\t\t\tprint \"RO2!\"","\t\t\tother=t[1].strip()","\t\t\t#print other","\t\tfieldingstat[\"runouts\"]=1","\t\tif other in fielding_stats:","\t\t\tfielding_stats[other][\"runouts\"]+=1","\t\telse:","\t\t\tfielding_stats[other]=fieldingstat","\t\t#print \"RUN OUT\",t[0],t[1]","\t","\tif(how_out.strip()==\"not out\"): #NOT OUT","\t\tprint \"NOT OUT\"","\t\t","\"\"\" CRAWLS AN URL \"\"\"","","def crawl(url):","\twhile True:","\t\ttry:","\t\t\tprint \"trying to get URL... \",","\t\t\tr=requests.get(url)","\t\t\tprint \"Got URL!\"","\t\t\treturn r.content","\t\texcept Exception as e:","\t\t\tprint e","\t\t\tsleep(2)","\t\t\tprint \"Retrying!!\"","","base_url = 'http://www.espncricinfo.com/carlton-mid-triangular-series-2015/engine/match/754751.html'","player_dict={\"Ian Bell\":0}","html = crawl(base_url)","print \"Page crawled.\"","parsed_html = BeautifulSoup(html)","","all_stats={} # STORES *ALL* THE STATS OF *ALL* THE PLAYERS INVOLVED IN THE MATCH","\t","bat_table=parsed_html.findAll(\"table\",{ \"class\" : \"batting-table innings\" })","","for table in bat_table:","\trows=table.findAll(\"tr\",{\"class\":None})","\t","\t# BATTING TABLE PARSER FOR BOTH INNINGS","\t","\tfor row in rows:","\t\tplayerstatdict={\"runsmade\":0, \"wickets\":0, \"ballsfaced\":0, \"fours\":0, \"sixes\":0, \"oversbowled\":0, \"maidenovers\":0, \"runsgiven\":0, \"dotsbowled\":0, \"mom\":0, \"dnb\":0, \"funscore\":0, \"catches\":0, \"stumpings\":0, \"runouts\":0}","\t\tname=\"\"","\t\tbatScore=0","\t\truns=0","\t\tfields=row.findAll(\"td\")","\t\tfor i in range(0,8):","\t\t\tif(i==1):","\t\t\t\tleft=\"view the player profile for \"","\t\t\t\tright=\"\\\" \"","\t\t\t\tname = re.search('%s(.*)%s' % (left, right), str(fields[i])).group(1)","\t\t\tif(i>=2 and i<=8):","\t\t\t\tleft=\">\"","\t\t\t\tright=\"</td>\"","\t\t\t\tresult = re.search('%s(.*)%s' % (left, right), str(fields[i])).group(1)","\t\t\t\t#print result,","\t\t\t\tif(i==2):","\t\t\t\t\tdismissal_handler(result)","\t\t\t\tif(i==3):","\t\t\t\t\truns=int(result.strip())","\t\t\t\t\tif(runs==0):","\t\t\t\t\t\tbatScore=batScore-5 #IMPACT DUCK","\t\t\t\t\tbatScore=batScore+runs #RUNS SCORE","\t\t\t\t\tplayerstatdict[\"runsmade\"]=runs","\t\t\t\t\tbatScore=batScore+(runs/25)*10 #MILESTONE BONUS","\t\t\t\tif(i==5):","\t\t\t\t\tbatScore=batScore+runs-int(result.strip()) #PACE BONUS","\t\t\t\t\tplayerstatdict[\"ballsfaced\"]=int(result.strip())","\t\t\t\tif(i==6):","\t\t\t\t\tplayerstatdict[\"fours\"]=int(result.strip())","\t\t\t\tif(i==7):","\t\t\t\t\tbatScore=batScore+int(result.strip())*2 #IMPACT SIXES","\t\t\t\t\tplayerstatdict[\"sixes\"]=int(result.strip())","\t\t#print\"  BATSCORE:\",batScore","\t\tprint \"\"","\t\tif name in player_dict:","\t\t\tplayer_dict[name]=player_dict[name]+batScore","\t\telse:","\t\t\tplayer_dict[name]=batScore","\t\t#print name, \"BAT,\", batScore","\t","\t\tall_stats[name]=playerstatdict","bowl_table=parsed_html.findAll(\"table\",{ \"class\" : \"bowling-table\" })","for table in bowl_table:","\trows=table.findAll(\"tr\",{\"class\":None})","\t","\t# BOWLING TABLE PARSER FOR BOTH INNINGS","\t","\tfor row in rows:","\t\tplayerstatdict={\"runsmade\":0, \"wickets\":0, \"ballsfaced\":0, \"fours\":0, \"sixes\":0, \"oversbowled\":0.0, \"maidenovers\":0, \"runsgiven\":0, \"dotsbowled\":0, \"mom\":0, \"dnb\":0, \"funscore\":0, \"catches\":0, \"stumpings\":0, \"runouts\":0}","\t\tname=\"\"","\t\tbowlScore=0","\t\tballs=0","\t\tfields=row.findAll(\"td\")","\t\tfor i in range(0,10):","\t\t\tif(i==1):","\t\t\t\tleft=\"view the player profile for \"","\t\t\t\tright=\"\\\" \"","\t\t\t\t#print  name,","\t\t\t\tname = re.search('%s(.*)%s' % (left, right), str(fields[i])).group(1)","\t\t\tif(i>=2 and i<=10):","\t\t\t\tleft=\">\"","\t\t\t\tright=\"</td>\"","\t\t\t\tresult = re.search('%s(.*)%s' % (left, right), str(fields[i])).group(1)","\t\t\t\t#print result,","\t\t\t\tif(i==3):","\t\t\t\t\tmaidens=int(result.strip())","\t\t\t\t\tif(maidens>0):","\t\t\t\t\t\tbowlScore=bowlScore+maidens*20 #IMPACT SCORE MAIDENS","\t\t\t\t\tplayerstatdict[\"maidenovers\"]=maidens","\t\t\t\tif(i==5):","\t\t\t\t\twickets=int(result.strip())","\t\t\t\t\tbowlScore=bowlScore+wickets*20 #WICKETS SCORE","\t\t\t\t\tbowlScore=bowlScore+(wickets-1)*10 #MILESTONE BONUS","\t\t\t\t\tplayerstatdict[\"wickets\"]=wickets","\t\t\t\tif(i==2):","\t\t\t\t\tovers=float(result.strip()) #PACE BONUS","\t\t\t\t\tov=int(overs)","\t\t\t\t\tballs=ov*6+int((overs-ov)*10)","\t\t\t\t\tplayerstatdict[\"oversbowled\"]=overs","\t\t\t\tif(i==4):","\t\t\t\t\truns=int(result.strip())","\t\t\t\t\tbowlScore=bowlScore+int(1.5*balls-runs)","\t\t\t\t\t#print balls,runs","\t\t\t\t\tplayerstatdict[\"runsgiven\"]=runs","\t\t\t\tif(i==7):","\t\t\t\t\tdots=int(result.strip()) #IMPACT SCORE DOTS","\t\t\t\t\tbowlScore=bowlScore+dots","\t\t\t\t\tplayerstatdict[\"dotsbowled\"]=dots","\t\t\t\t","\t\t#print\"  BATSCORE:\",batScore","\t\tprint \"\"","\t\tif name in player_dict:","\t\t\tplayer_dict[name]=player_dict[name]+bowlScore","\t\telse:","\t\t\tplayer_dict[name]=bowlScore","\t\tprint name, \"BOWL,\", bowlScore","\t\t","\t\tif name in all_stats:","\t\t\tall_stats[name][\"oversbowled\"]=playerstatdict[\"oversbowled\"]","\t\t\tall_stats[name][\"maidenovers\"]=playerstatdict[\"maidenovers\"]","\t\t\tall_stats[name][\"runsgiven\"]=playerstatdict[\"runsgiven\"]","\t\t\tall_stats[name][\"wickets\"]=playerstatdict[\"wickets\"]","\t\t\tall_stats[name][\"dotsbowled\"]=playerstatdict[\"dotsbowled\"]","\t\telse:","\t\t\tall_stats[name]=playerstatdict","\t\t","\t\t","#print player_dict","print \"\\n \\n \\n\"","","tbl=parsed_html.find(\"div\",{ \"class\" : \"match-information\" })","stts=tbl.findAll(\"div\",{ \"class\" : \"bold space-top-bottom-10\"})","mom=str(stts[1].find(\"span\",{\"class\":\"normal\"}).text)","name=mom.split(\" \")","mom_name=name[0]+name[1]","","","# DNB AND MOM MODIFIER #","for player in all_stats:","\tif(all_stats[player][\"ballsfaced\"]==0):","\t\tall_stats[player][\"dnb\"]=1","","print process.extractOne(mom_name,all_stats.keys())","","print all_stats","print fielding_stats","","print \"-------TESTING--------\"","for player in fielding_stats:","\tprint player,","\tmatch=process.extractOne(player,all_stats.keys())","\tif(match[1]>65): #CORRECT MATCH","\t\tall_stats[match[0]][\"catches\"]=fielding_stats[player][\"catches\"]","\t\tall_stats[match[0]][\"stumpings\"]=fielding_stats[player][\"stumpings\"]","\t\tall_stats[match[0]][\"runouts\"]=fielding_stats[player][\"runouts\"]","\tif(match[1]==0): # DUMMY ROW","\t\tcontinue","\tif(match[1]>20 and match[1]<65):","\t\tplayerstatdict={\"runsmade\":0, \"wickets\":0, \"ballsfaced\":0, \"fours\":0, \"sixes\":0, \"oversbowled\":0.0, \"maidenovers\":0, \"runsgiven\":0, \"dotsbowled\":0, \"mom\":0, \"dnb\":0, \"funscore\":0, \"catches\":0, \"stumpings\":0, \"runouts\":0}","\t\tall_stats[player]=playerstatdict","\t\tall_stats[player][\"catches\"]=fielding_stats[player][\"catches\"]","\t\tall_stats[player][\"stumpings\"]=fielding_stats[player][\"stumpings\"]","\t\tall_stats[player][\"runouts\"]=fielding_stats[player][\"runouts\"]","\t\t","print all_stats","#print \"Man Of The Match: \",name","#print name","#print rows[1].findAll(\"td\")","#print bat_table","#print parsed_html"]}]}]]},"ace":{"folds":[],"scrolltop":3401.555612564087,"scrollleft":0,"selection":{"start":{"row":268,"column":18},"end":{"row":268,"column":18},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":234,"state":"start","mode":"ace/mode/python"}},"timestamp":1424288913308,"hash":"dfa9560b0519a5f9779617d49c10a3137fac3474"}